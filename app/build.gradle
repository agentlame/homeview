apply plugin: 'com.android.application'

def appVersionStr = '1.0'
def appVersionInt = 10

if (project.hasProperty('appVersion')) {
    appVersionStr = appVersion
    appVersionInt = (appVersion.toFloat()*10).toInteger()
}

def buildVersion     =           0
def ApiVersion       =     24

def AppVersionShift  =        1000
def ApiVersionShift  =      100000

def BaseVersionCode =    900000000

if (! project.hasProperty('buildNum')) {
    version = "${appVersionStr}.SNAPSHOT"
}
else {
    version = "${appVersionStr}.${buildNum}"
    buildVersion = buildNum.toInteger()
}

appVersionStr = "${appVersionStr}.${buildVersion}"

println "Repo Version : ${version}"
println "App Version : ${appVersionStr} (${appVersionInt})"
println "Build : ${buildVersion}"
println "API : ${ApiVersion}"

android {

    compileSdkVersion 24
    buildToolsVersion '24.0.2'

    defaultConfig {
        applicationId "com.monsterbutt.homeview"
        minSdkVersion 23
        targetSdkVersion 23
        archivesBaseName = "homeview"

        versionName appVersionStr
        versionCode = BaseVersionCode +
                (ApiVersion * ApiVersionShift) +
                (appVersionInt * AppVersionShift) +
                buildVersion
        println "Version Code (Default) : ${versionCode}"
    }

    packagingOptions {
        exclude 'META-INF/beans.xml'
    }

    sourceSets.main.jni.srcDirs = [] //disable automatic ndk-build call

    signingConfigs {
        release
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            jniDebuggable true
        }
    }


    def Properties props = new Properties()
    def propFile = new File('signing.properties')
    if (propFile.canRead()){
        props.load(new FileInputStream(propFile))

        if (props!=null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
                props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
            android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
            android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
            android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
            android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
        } else {
            println 'signing.properties found but some entries are missing'
            android.buildTypes.release.signingConfig = null
        }
    } else {
        println 'signing.properties not found'
        android.buildTypes.release.signingConfig = null
    }
}

task ndkBuild(type: Exec) {

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def sdkDir = properties.getProperty('sdk.dir')
    def ndkDir = properties.getProperty('ndk.dir')
    commandLine "${ndkDir}/ndk-build", '-C', file('src/main/jni').absolutePath, "NDK_LIBS_OUT=../jniLibs"
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn ndkBuild
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url 'http://4thline.org/m2'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:recyclerview-v7:24.2.0'
    compile 'com.android.support:leanback-v17:24.2.0'
    compile 'com.android.support:appcompat-v7:24.2.0'
    compile 'com.github.bumptech.glide:glide:3.4.0'
    compile('org.simpleframework:simple-xml:2.7.+') {
        exclude module: 'stax'
        exclude module: 'stax-api'
        exclude module: 'xpp3'
    }
    compile project(':ExoPlayer')
    compile 'com.android.support:design:24.2.0'

    compile group: 'org.fourthline.cling', name: 'cling-core', version:'2.1.0'
    compile group: 'org.fourthline.cling', name: 'cling-support', version:'2.1.0'
    compile group: 'org.eclipse.jetty', name: 'jetty-server', version:'8.1.12.v20130726'
    compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version:'8.1.12.v20130726'
    compile group: 'org.eclipse.jetty', name: 'jetty-client', version:'8.1.12.v20130726'
}
